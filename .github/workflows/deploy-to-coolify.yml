name: Deploy to Coolify

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind

    permissions:
      contents: read
      packages: write

    env:
      REPOSITORY_NAME: "ghcr.io/bromade8300/tp-devops-gr4"

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push FRONT Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./front/Dockerfile
          push: true
          tags: |
            ${{ env.REPOSITORY_NAME }}:${{ github.sha }}
            ${{ env.REPOSITORY_NAME }}:latest
      - name: Build and push BACK Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./back/Dockerfile
          push: true
          tags: |
            ${{ env.REPOSITORY_NAME }}:${{ github.sha }}
            ${{ env.REPOSITORY_NAME }}:latest

  deploy:
    name: Trigger Coolify Deployment
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Triggering Coolify deployment
        run: |
          # Build authorization header using GitHub secrets
          AUTH_HEADER="Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"

          # Trigger Coolify webhook
          curl --location --request POST "${{ secrets.COOLIFY_WEBHOOK }}" \
            --header "$AUTH_HEADER" \
            --header "Content-Type: application/json" \
            --data '{}'
